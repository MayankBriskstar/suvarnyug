@* @model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Chat's";
}
<section class="find-partner-area pt-20 rel z-1">
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="section-title text-center counter-text-wrap">
                <h2>Start your <span>conversation</span></h2>
                <p>Engage in real-time discussions with friends, share thoughts, and build meaningful connections.</p>
            </div>
        </div>
    </div>
    <div class="search-container text-center mb-4">
        <input type="text" id="searchUser" class="form-control w-50 mx-auto" style="border: 1px solid black;" placeholder="Search by name...">
    </div>
    <div class="outsidechat">
        <div class="chat-container mb-20">
            <div class="user-list">
                @if (Model.Any())
                {
                    @foreach (var user in Model)
                    {
                        <div class="user-item" id="user-@user.UserId" data-name="@user.FullName.ToLower()">
                            <a href="@Url.Action("Chat", "Chat", new { userId = user.UserId })" class="user-link">
                                <div class="user-avatar">
                                    <img src="@(!string.IsNullOrEmpty(user.ProfilePhotoPath) ? user.ProfilePhotoPath : Url.Content("~/images/default-profile.jpg"))"
                                         alt="User Avatar" class="avatar-image img-thumbnail" />
                                </div>
                                <div class="user-info">
                                    <div class="user-name-chat">@user.FullName</div>
                                    <div class="user-unreadmessage">
                                        @if (user.UnreadMessagesCount > 0)
                                        {
                                            <span class="unread-circle">@user.UnreadMessagesCount</span>
                                        }
                                        <span class="unread-text">
                                            @(user.UnreadMessagesCount > 0 ? "messages" : "")
                                        </span>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <div class="no-chat-message text-center mt-5">
                        <h3 style="color: #f7921e;">No Conversations Yet</h3>
                        <p>Find your perfect partner for genuine connections and fulfilling relationships.</p>
                        <a asp-action="findpartner" asp-controller="matrimonial" class="theme-btn style-two">
                            <span data-hover="Go to Matrimonial">Go to Matrimonial</span>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        var userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.start().catch(err => console.error(err.toString()));

        connection.on("UpdateUnreadMessages", function (senderId, unreadCount,) {
            var userItem = document.getElementById("user-" + senderId);
            if (userItem) {
                var countBadge = userItem.querySelector(".unread-circle");
                var messageText = userItem.querySelector(".unread-text");

                if (countBadge && messageText) {
                    if (unreadCount > 0) {
                        countBadge.textContent = unreadCount;
                        messageText.textContent = "messages";
                    } else {
                        countBadge.style.display = "none";
                        messageText.textContent = "";
                    }
                }
            }
        });
         document.getElementById("searchUser").addEventListener("keyup", function () {
            var searchText = this.value.toLowerCase();
            var users = document.querySelectorAll(".user-item");

            users.forEach(function (user) {
                var userName = user.getAttribute("data-name");
                if (userName.includes(searchText)) {
                    user.style.display = "block";
                } else {
                    user.style.display = "none";
                }
            });
        });
    </script>
}

 *@